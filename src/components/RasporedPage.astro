---
import "@styles/global.css";

const times = [];
const START_HOUR = 9;
const END_HOUR = 19;

const TIME_SLOT_HEIGHT = 64; // Height of each time slot in pixels
const TIME_LINE_HEIGHT = 2;

for (let hour = START_HOUR; hour < END_HOUR; hour++) {
    times.push(`${hour.toString().padStart(2, "0")}:00`);
    times.push(`${hour.toString().padStart(2, "0")}:30`);
}

// Example events with start and end times
const events = [
    { start: "09:00", end: "10:00", title: "Event 1", color: "#f00" },
    { start: "10:30", end: "11:00", title: "Event 2", color: "#0f0" },
    { start: "12:30", end: "14:00", title: "Event 3", color: "#00f" },
];

// Calculate the top and height for each event
const calculateEventStyle = (start: string, end: string) => {
    const startMinutes =
        parseInt(start.split(":")[0]) * 60 + parseInt(start.split(":")[1]);
    const endMinutes =
        parseInt(end.split(":")[0]) * 60 + parseInt(end.split(":")[1]);
    const startTime = START_HOUR * 60; // 9:00 AM in minutes
    const totalMinutes = (END_HOUR - START_HOUR) * 60;

    const top =
        ((startMinutes - startTime) / totalMinutes) *
        (TIME_SLOT_HEIGHT * times.length);
    const height =
        ((endMinutes - startMinutes) / totalMinutes) *
        (TIME_SLOT_HEIGHT * times.length) + TIME_LINE_HEIGHT;

    return { top: `${top}px`, height: `${height}px` };
};
---

<div class="container mx-auto w-full">
    <div class="timetable relative border-gray-300 my-20 w-full mx-auto">
        {
            times.map((time) => (
                <div
                    class="flex w-full gap-5"
                    style={{ height: `${TIME_SLOT_HEIGHT}px` }}
                >
                    <div class="time text-xl font-semibold text-gray-500 font-open-sans flex items-center -translate-y-1/2">
                        {time}
                    </div>
                    <div class="w-full border-t border-gray-600" style={{borderTopWidth: `${TIME_LINE_HEIGHT}px`}} />
                </div>
            ))
        }
        {
            events.map((event) => {
                const style = calculateEventStyle(event.start, event.end);
                return (
                    <div
                        class="absolute left-23 right-0 flex items-center justify-center"
                        style={{ ...style, backgroundColor: event.color }}
                    >
                        {event.title}
                    </div>
                );
            })
        }
    </div>
</div>

<style>
    .timetable {
        height: calc(
            (19 - 9) * 2 * 64px
        ); /* Adjust height based on the number of time slots */
    }
</style>
